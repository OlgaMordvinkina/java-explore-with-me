DROP TABLE IF EXISTS categories, users, compilations_events, compilations, events, locations, requests, comments;

CREATE TABLE IF NOT EXISTS categories
(
    id   BIGINT GENERATED BY DEFAULT AS IDENTITY primary key,
    name VARCHAR(255) NOT NULL UNIQUE
);

CREATE TABLE IF NOT EXISTS users
(
    id    BIGINT GENERATED BY DEFAULT AS IDENTITY primary key,
    email VARCHAR(255) NOT NULL UNIQUE,
    name  VARCHAR(255) NOT NULL
);

CREATE TABLE IF NOT EXISTS compilations
(
    id     BIGINT GENERATED BY DEFAULT AS IDENTITY primary key,
    title  VARCHAR(255) NOT NULL,
    pinned BOOLEAN      NOT NULL
);

CREATE TABLE IF NOT EXISTS locations
(
    id  BIGINT GENERATED BY DEFAULT AS IDENTITY primary key,
    lat FLOAT NOT NULL,
    lon FLOAT NOT NULL
);

CREATE TABLE IF NOT EXISTS events
(
    id                 BIGINT GENERATED BY DEFAULT AS IDENTITY primary key,
    title              VARCHAR(255)  NOT NULL,
    annotation         VARCHAR(2000) NOT NULL,
    category_id        BIGINT        NOT NULL,
    paid               BOOLEAN       NOT NULL,
    event_date         TIMESTAMP     NOT NULL,
    user_id            BIGINT        NOT NULL,
    description        VARCHAR(7000) NOT NULL,
    participant_limit  BIGINT        NOT NULL,
    created_on         TIMESTAMP     NOT NULL,
    location_id        BIGINT        NOT NULL,
    request_moderation BOOLEAN       NOT NULL,
    published_on       TIMESTAMP,
    state              VARCHAR(255)  NOT NULL,
    CONSTRAINT FK_EVENT_FOR_CATEGORIES FOREIGN KEY (category_id) REFERENCES categories (id),
    CONSTRAINT FK_EVENT_FOR_USERS FOREIGN KEY (user_id) REFERENCES users (id),
    CONSTRAINT FK_EVENT_FOR_LOCATIONS FOREIGN KEY (location_id) REFERENCES locations (id)
);

CREATE TABLE IF NOT EXISTS compilations_events
(
    compilation_id BIGINT NOT NULL,
    event_id       BIGINT,
    PRIMARY KEY (compilation_id, event_id),
    CONSTRAINT FK_EVENT_FOR_COMPILATION FOREIGN KEY (compilation_id) REFERENCES compilations (id),
    CONSTRAINT FK_EVENT_FOR_EVENT FOREIGN KEY (event_id) REFERENCES events (id)
);

CREATE TABLE IF NOT EXISTS requests
(
    id           BIGINT GENERATED BY DEFAULT AS IDENTITY primary key,
    requester_id BIGINT       NOT NULL,
    event_id     BIGINT       NOT NULL,
    status       VARCHAR(255) NOT NULL,
    created      TIMESTAMP    NOT NULL,
    CONSTRAINT FK_EVENT_FOR_USERS FOREIGN KEY (requester_id) REFERENCES users (id),
    CONSTRAINT FK_EVENT_FOR_EVENTS FOREIGN KEY (event_id) REFERENCES events (id)
);

CREATE TABLE IF NOT EXISTS comments
(
    id        BIGINT GENERATED BY DEFAULT AS IDENTITY primary key,
    event_id  BIGINT        NOT NULL,
    author_id BIGINT        NOT NULL,
    text      VARCHAR(2000) NOT NULL,
    created   TIMESTAMP     NOT NULL,
    updated   TIMESTAMP,
    CONSTRAINT FK_EVENT_FOR_EVENTS FOREIGN KEY (event_id) REFERENCES events (id),
    CONSTRAINT FK_EVENT_FOR_USERS FOREIGN KEY (author_id) REFERENCES users (id)
);